[
  {
      "id": "9a271dd19e90f356",
      "type": "tab",
      "label": "Flow 1",
      "disabled": false,
      "info": ""
  },
  {
      "id": "fbb68de0dfdf0bac",
      "type": "elasticsearch-config",
      "endpoint": "http://localhost:9200",
      "index": "orders"
  },
  {
      "id": "7722387a34d54798",
      "type": "elasticsearch-config",
      "endpoint": "http://kbs001exe.exentriq.com:31696",
      "index": "orders"
  },
  {
      "id": "25c9c80596b6bec0",
      "type": "elasticsearch-config",
      "endpoint": "http://kbs001exe.exentriq.com:31696",
      "index": "confirmations"
  },
  {
      "id": "6999f8ebd728cdf4",
      "type": "elasticsearch-config",
      "endpoint": "http://localhost:9200",
      "index": "confirmations"
  },
  {
      "id": "3f0a6adbd3484acf",
      "type": "fileinject",
      "z": "9a271dd19e90f356",
      "name": "PDF Attachment",
      "x": 460,
      "y": 200,
      "wires": [
          []
      ]
  },
  {
      "id": "33e1650715747ade",
      "type": "debug",
      "z": "9a271dd19e90f356",
      "name": "Order received!",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "true",
      "targetType": "full",
      "statusVal": "",
      "statusType": "auto",
      "x": 1580,
      "y": 240,
      "wires": []
  },
  {
      "id": "f526a8a3a3ac790b",
      "type": "switch",
      "z": "9a271dd19e90f356",
      "name": "Document Type?",
      "property": "documentType",
      "propertyType": "msg",
      "rules": [
          {
              "t": "eq",
              "v": "order",
              "vt": "str"
          },
          {
              "t": "eq",
              "v": "confirmation",
              "vt": "str"
          }
      ],
      "checkall": "true",
      "repair": false,
      "outputs": 2,
      "x": 890,
      "y": 360,
      "wires": [
          [
              "2cdd9269864c4ba5"
          ],
          [
              "f4792cd4dafa24a5"
          ]
      ]
  },
  {
      "id": "82fe9f59800f8c6a",
      "type": "debug",
      "z": "9a271dd19e90f356",
      "name": "Confirmation received!",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "payload",
      "targetType": "msg",
      "statusVal": "",
      "statusType": "auto",
      "x": 1580,
      "y": 480,
      "wires": []
  },
  {
      "id": "014a5be4d975b6cc",
      "type": "debug",
      "z": "9a271dd19e90f356",
      "name": "Recognized Text",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "recognizedText",
      "targetType": "msg",
      "statusVal": "",
      "statusType": "auto",
      "x": 890,
      "y": 220,
      "wires": []
  },
  {
      "id": "750e9f39d68bcd7d",
      "type": "fileinject",
      "z": "9a271dd19e90f356",
      "name": "PDF Attachment",
      "x": 460,
      "y": 520,
      "wires": [
          []
      ]
  },
  {
      "id": "1e45340f213604d7",
      "type": "fileinject",
      "z": "9a271dd19e90f356",
      "name": "EML file",
      "x": 90,
      "y": 360,
      "wires": [
          [
              "b4118d3631edf758"
          ]
      ]
  },
  {
      "id": "8d9e8123320ab182",
      "type": "play audio",
      "z": "9a271dd19e90f356",
      "name": "Say it!",
      "voice": "1",
      "x": 1450,
      "y": 800,
      "wires": []
  },
  {
      "id": "8dea990e74558c6d",
      "type": "function",
      "z": "9a271dd19e90f356",
      "name": "Create order speech",
      "func": "const provinces = {\n    BS: 'Brescia',\n    FI: 'Firenze',\n    MI: 'Milano',\n    NO: 'Novara'\n};\n\nconst speechAddress = (a) => {\n    \n    a = a.replace('PROVINC.', 'provinciale');\n    a = a.replace('/', ' barra ');\n    \n    const m = a.match(/\\((?<province>[A-Z]{2})\\)/);\n    if (m) {\n        const province = provinces[m.groups.province];\n        if (province) {\n            return a.replace(`(${m.groups.province})`, `, in provincia di ${province},`);\n        }\n    }\n    \n    return a;\n\n};\n\nconst speechProductDescription = (d) => {\n    return d\n        .replace(' 80g', '')\n        .replace('Lattugood', 'Lattugud');\n    \n};\n\nconst speechDate = (d) => {\n    return new Date(d).toLocaleString('it-IT', { year: 'numeric', month: 'long', day: 'numeric' });\n};\n\nconst speechOrderNumber = (n) => {\n  return n.split('').join(', ').replace('/', 'barra');\n};\n\nconst order = msg.payload;\nlet payload = `Ricevuto un ordine da ${order.customer}. `;\n\npayload += `Ordine numero ${speechOrderNumber(order.number)}, `;\npayload += `del ${speechDate(order.date)}, `;\npayload += `per il ${speechDate(order.delivery)}. `;\nif (order.overrides) {\n    payload += `Attenzione! Questo ordine annulla il precedente con il medesimo codice. `;\n}\npayload += `La destinazione è ${speechAddress(order.destination.address)}). `;\nif (order.destination.from && order.destination.to) {\n    payload += `Il magazzino riceve dalle ${order.destination.from} alle ${order.destination.to}. `;\n}\npayload += `I prodotti ordinàti sono: `;\n\nfor (const product of order.products) {\n    payload += `${speechProductDescription(product.description)}, ${product.boxes} box, per un totale di ${product.items} confezioni. `;\n}\npayload += `Il totale dei box ordinàti è ${order.totals.boxes}, per un totale di ${order.totals.items} confezioni. `;\n\nif (order.anomalies.length === 0) {\n    payload += 'Non sono state riscontrate anomalie nell\\'analisi del testo.';\n} else if (order.anomalies.length === 1) {\n    payload += 'È stata riscontrata un\\'anomalia nell\\'analisi del testo.';\n} else {\n    payload += `Sono state riscontrate ${order.anomalies.length} anomalie nell'analisi del testo.`;\n}\n\n\nreturn {\n    payload\n};",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 1240,
      "y": 760,
      "wires": [
          [
              "8d9e8123320ab182"
          ]
      ]
  },
  {
      "id": "c04f17424c019a21",
      "type": "link out",
      "z": "9a271dd19e90f356",
      "name": "",
      "links": [
          "5d7aaacd89279ca1"
      ],
      "x": 1495,
      "y": 200,
      "wires": []
  },
  {
      "id": "5d7aaacd89279ca1",
      "type": "link in",
      "z": "9a271dd19e90f356",
      "d": true,
      "name": "Create order speech",
      "links": [
          "c04f17424c019a21"
      ],
      "x": 1035,
      "y": 760,
      "wires": [
          [
              "8dea990e74558c6d"
          ]
      ]
  },
  {
      "id": "4b7afc04dc150e0b",
      "type": "link in",
      "z": "9a271dd19e90f356",
      "d": true,
      "name": "Create confirmation speech",
      "links": [
          "0e4f1e99458b3ad4"
      ],
      "x": 1035,
      "y": 840,
      "wires": [
          [
              "a7b28185488974ca"
          ]
      ]
  },
  {
      "id": "a7b28185488974ca",
      "type": "function",
      "z": "9a271dd19e90f356",
      "name": "Create confirmation speech",
      "func": "const speechDate = (d) => {\n    return new Date(d).toLocaleString('it-IT', { year: 'numeric', month: 'long', day: 'numeric' });\n};\n\nconst speechNumber = (n) => {\n  return n.split('').join(', ').replace('/', 'barra');\n};\n\nconst speechProductDescription = (d) => {\n    return d\n        .replace(' 80g', '')\n        .replace('Lattugood', 'Lattugud');\n    \n};\n\nconst confirmation = msg.payload;\nlet payload = `Ricevuta una conferma d\\'ordine da ${confirmation.customer}, `;\n\npayload += `del ${speechDate(confirmation.date)}, `;\n\nif (confirmation.order) {\n    payload += `per l\\'ordine numero ${speechNumber(confirmation.order)}. `;\n} else if (confirmation.shipping.code && confirmation.shipping.date) {\n    payload += `per il documento di trasporto numero ${speechNumber(confirmation.shipping.code)}, del ${speechDate(confirmation.shipping.date)}. `;\n} else {\n    payload += '. ';\n}\npayload += `I prodotti confermàti sono: `;\n\nfor (const product of confirmation.products) {\n    payload += `${speechProductDescription(product.description)}, ${product.boxes} box, per un totale di ${product.items} confezioni, `;\n    payload += `al costo unitario di ${product.unit_cost} €, per un costo totale di ${product.total_cost} €. `;\n}\npayload += `Il totale dei box confermàti è ${confirmation.totals.boxes}, per un totale di ${confirmation.totals.items} confezioni. `;\npayload += `L'importo da fatturare è: ${confirmation.totals.cost.toFixed(2)} €. `;\n\nif (confirmation.anomalies.length === 0) {\n    payload += 'Non sono state riscontrate anomalie nell\\'analisi del testo.';\n} else if (confirmation.anomalies.length === 1) {\n    payload += 'È stata riscontrata un\\'anomalia nell\\'analisi del testo.';\n} else {\n    payload += `Sono state riscontrate ${confirmation.anomalies.length} anomalie nell'analisi del testo.`;\n}\n\n\nreturn {\n    payload\n};",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 1220,
      "y": 840,
      "wires": [
          [
              "8d9e8123320ab182"
          ]
      ]
  },
  {
      "id": "0e4f1e99458b3ad4",
      "type": "link out",
      "z": "9a271dd19e90f356",
      "name": "",
      "links": [
          "4b7afc04dc150e0b"
      ],
      "x": 1475,
      "y": 520,
      "wires": []
  },
  {
      "id": "611f42916d9ee059",
      "type": "debug",
      "z": "9a271dd19e90f356",
      "name": "Recognized Text",
      "active": false,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "recognizedText",
      "targetType": "msg",
      "statusVal": "",
      "statusType": "auto",
      "x": 890,
      "y": 520,
      "wires": []
  },
  {
      "id": "845ca373e3245671",
      "type": "json",
      "z": "9a271dd19e90f356",
      "name": "JSON OK?",
      "property": "payload",
      "action": "obj",
      "pretty": false,
      "x": 1350,
      "y": 320,
      "wires": [
          [
              "33e1650715747ade",
              "c04f17424c019a21",
              "3b5bdebeada87454"
          ]
      ]
  },
  {
      "id": "ec6190d09276fc75",
      "type": "catch",
      "z": "9a271dd19e90f356",
      "name": "",
      "scope": null,
      "uncaught": false,
      "x": 430,
      "y": 820,
      "wires": [
          [
              "2e81c8f53ed69600"
          ]
      ]
  },
  {
      "id": "2e81c8f53ed69600",
      "type": "debug",
      "z": "9a271dd19e90f356",
      "name": "",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "true",
      "targetType": "full",
      "statusVal": "",
      "statusType": "auto",
      "x": 610,
      "y": 820,
      "wires": []
  },
  {
      "id": "39609b33be7e188f",
      "type": "json",
      "z": "9a271dd19e90f356",
      "name": "JSON OK?",
      "property": "payload",
      "action": "obj",
      "pretty": false,
      "x": 1350,
      "y": 400,
      "wires": [
          [
              "82fe9f59800f8c6a",
              "0e4f1e99458b3ad4",
              "e83cb0696a3a90e8"
          ]
      ]
  },
  {
      "id": "a12a8df6965b4e8d",
      "type": "debug",
      "z": "9a271dd19e90f356",
      "name": "Elasticsearch input",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "true",
      "targetType": "full",
      "statusVal": "",
      "statusType": "auto",
      "x": 1890,
      "y": 360,
      "wires": []
  },
  {
      "id": "b4118d3631edf758",
      "type": "eml",
      "z": "9a271dd19e90f356",
      "name": "EML Parser",
      "x": 250,
      "y": 360,
      "wires": [
          [
              "fc19e06c8fa32c0f"
          ]
      ]
  },
  {
      "id": "2cdd9269864c4ba5",
      "type": "schema-injector",
      "z": "9a271dd19e90f356",
      "name": "Order Schema",
      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"$ref\": \"#/definitions/Order\",\n  \"definitions\": {\n    \"Order\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"customer\": {\n          \"type\": \"string\"\n        },\n        \"anomalies\": {\n          \"type\": [\"array\", \"null\"],\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"number\": {\n          \"type\": \"string\"\n        },\n        \"overrides\": {\n          \"type\": \"boolean\"\n        },\n        \"date\": {\n          \"type\": \"string\"\n        },\n        \"delivery\": {\n          \"type\": \"string\"\n        },\n        \"destination\": {\n          \"$ref\": \"#/definitions/Destination\"\n        },\n        \"products\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"uniqueItems\": true,\n          \"items\": {\n            \"$ref\": \"#/definitions/Product\"\n          }\n        },\n        \"totals\": {\n          \"$ref\": \"#/definitions/Totals\"\n        }\n      },\n      \"required\": [\n        \"anomalies\",\n        \"customer\",\n        \"date\",\n        \"delivery\",\n        \"destination\",\n        \"number\",\n        \"overrides\",\n        \"products\",\n        \"totals\"\n      ],\n      \"title\": \"Welcome\"\n    },\n    \"Destination\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"address\": {\n          \"type\": \"string\"\n        },\n        \"from\": {\n          \"type\": [\"string\", \"null\"]\n        },\n        \"to\": {\n          \"type\": [\"string\", \"null\"]\n        }\n      },\n      \"required\": [\n        \"address\",\n        \"from\",\n        \"to\"\n      ],\n      \"title\": \"Destination\"\n    },\n    \"Product\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"code\": {\n          \"type\": \"string\"\n        },\n        \"customer_code\": {\n            \"type\": \"string\"\n        },\n        \"ean\": {\n            \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"boxes\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"items\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        }\n      },\n      \"required\": [\n        \"boxes\",\n        \"code\",\n        \"customer_code\",\n        \"ean\",\n        \"description\",\n        \"items\"\n      ],\n      \"title\": \"Product\"\n    },\n    \"Totals\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"boxes\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"items\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        }\n      },\n      \"required\": [\n        \"boxes\",\n        \"items\"\n      ],\n      \"title\": \"Totals\"\n    }\n  }\n}\n",
      "x": 1120,
      "y": 320,
      "wires": [
          [
              "845ca373e3245671"
          ]
      ]
  },
  {
      "id": "f4792cd4dafa24a5",
      "type": "schema-injector",
      "z": "9a271dd19e90f356",
      "name": "Confirmation Schema",
      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"$ref\": \"#/definitions/Confirmation\",\n  \"definitions\": {\n    \"Confirmation\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"customer\": {\n          \"type\": \"string\"\n        },\n        \"anomalies\": {\n          \"type\": [\"array\", \"null\"],\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"date\": {\n          \"type\": \"string\"\n        },\n        \"order\": {\n          \"type\": [\"string\", \"null\"]\n        },\n        \"shipping\": {\n          \"$ref\": \"#/definitions/Shipping\"\n        },\n        \"products\": {\n          \"type\": \"array\",\n          \"minItems\": 0,\n          \"uniqueItems\": true,\n          \"items\": {\n            \"$ref\": \"#/definitions/Product\"\n          }\n        },\n        \"totals\": {\n          \"$ref\": \"#/definitions/Totals\"\n        }\n      },\n      \"required\": [\n        \"anomalies\",\n        \"customer\",\n        \"date\",\n        \"order\",\n        \"products\",\n        \"shipping\",\n        \"totals\"\n      ],\n      \"title\": \"Welcome\"\n    },\n    \"Product\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"code\": {\n          \"type\": \"string\"\n        },\n        \"customer_code\": {\n          \"type\": \"string\"\n        },\n        \"ean\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"boxes\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"items\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"unit_cost\": {\n          \"type\": \"number\"\n        },\n        \"total_cost\": {\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"boxes\",\n        \"code\",\n        \"customer_code\",\n        \"ean\",\n        \"description\",\n        \"items\",\n        \"total_cost\",\n        \"unit_cost\"\n      ],\n      \"title\": \"Product\"\n    },\n    \"Shipping\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"code\": {\n          \"type\": [\"string\", \"null\"]\n        },\n        \"date\": {\n          \"type\": [\"string\", \"null\"]\n        }\n      },\n      \"required\": [\n        \"code\",\n        \"date\"\n      ],\n      \"title\": \"Shipping\"\n    },\n    \"Totals\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"boxes\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"items\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"cost\": {\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"boxes\",\n        \"cost\",\n        \"items\"\n      ],\n      \"title\": \"Totals\"\n    }\n  }\n}\n",
      "x": 1140,
      "y": 400,
      "wires": [
          [
              "39609b33be7e188f"
          ]
      ]
  },
  {
      "id": "fc19e06c8fa32c0f",
      "type": "attachment-switch",
      "z": "9a271dd19e90f356",
      "name": "Customer?",
      "outputs": 2,
      "rules": [
          "{\"name\":\"Esselunga\",\"domains\":[\"esselunga.it\"]}",
          "{\"name\":\"Ortofin\",\"domains\":[\"ortofin.it\"]}"
      ],
      "x": 460,
      "y": 360,
      "wires": [
          [
              "cd5507cd41791f46"
          ],
          [
              "02e0f6ee3caa70ad"
          ]
      ]
  },
  {
      "id": "3b5bdebeada87454",
      "type": "elasticsearch-create",
      "z": "9a271dd19e90f356",
      "name": "Create Order",
      "elasticsearch": "fbb68de0dfdf0bac",
      "plant": "pf",
      "service": "sales",
      "doctype": "documentType",
      "doctypeType": "msg",
      "entity": "payload",
      "entityType": "msg",
      "x": 1570,
      "y": 320,
      "wires": [
          [
              "a12a8df6965b4e8d"
          ]
      ]
  },
  {
      "id": "cd5507cd41791f46",
      "type": "esselunga-pdf",
      "z": "9a271dd19e90f356",
      "name": "",
      "products": "[{\"code\":\"200004\",\"ean\":\"8059300850091\",\"customer_code\":\"755001\",\"description\":\"Yummix Delicato 80g\",\"boxItems\":8},{\"code\":\"200002\",\"ean\":\"8059300850077\",\"customer_code\":\"755002\",\"description\":\"Yummix Orientale 80g\",\"boxItems\":8},{\"code\":\"200003\",\"ean\":\"8059300850084\",\"customer_code\":\"755003\",\"description\":\"Yummix Piccante 80g\",\"boxItems\":8},{\"code\":\"200000\",\"ean\":\"8059300850039\",\"customer_code\":\"755005\",\"description\":\"Lattugood 80g\",\"boxItems\":8},{\"code\":\"200001\",\"ean\":\"80593008500??\",\"customer_code\":\"755004\",\"description\":\"Basilicooh 25g\",\"boxItems\":10}]",
      "x": 670,
      "y": 320,
      "wires": [
          [
              "f526a8a3a3ac790b",
              "014a5be4d975b6cc"
          ]
      ]
  },
  {
      "id": "02e0f6ee3caa70ad",
      "type": "ortofin-pdf",
      "z": "9a271dd19e90f356",
      "name": "",
      "products": "[{\"code\":\"200004\",\"ean\":\"8059300850091\",\"customer_code\":\"0350303021\",\"description\":\"Yummix Delicato 80g\",\"boxItems\":8},{\"code\":\"200002\",\"ean\":\"8059300850077\",\"customer_code\":\"0350303019\",\"description\":\"Yummix Orientale 80g\",\"boxItems\":8},{\"code\":\"200003\",\"ean\":\"8059300850084\",\"customer_code\":\"0350303020\",\"description\":\"Yummix Piccante 80g\",\"boxItems\":8},{\"code\":\"200000\",\"ean\":\"8059300850039\",\"customer_code\":\"0350303022\",\"description\":\"Lattugood 80g\",\"boxItems\":8},{\"code\":\"200001\",\"ean\":\"80593008500??\",\"customer_code\":\"0350201359\",\"description\":\"Basilicooh 25g\",\"boxItems\":10}]",
      "x": 670,
      "y": 400,
      "wires": [
          [
              "f526a8a3a3ac790b"
          ]
      ]
  },
  {
      "id": "e83cb0696a3a90e8",
      "type": "elasticsearch-create",
      "z": "9a271dd19e90f356",
      "d": true,
      "name": "Create Confirimation",
      "elasticsearch": "6999f8ebd728cdf4",
      "plant": "pf",
      "service": "sales",
      "doctype": "documentType",
      "doctypeType": "msg",
      "entity": "payload",
      "entityType": "msg",
      "x": 1580,
      "y": 400,
      "wires": [
          [
              "a12a8df6965b4e8d"
          ]
      ]
  },
  {
      "id": "d66b3e0fef44ed0d",
      "type": "file in",
      "z": "9a271dd19e90f356",
      "name": "",
      "filename": "",
      "format": "utf8",
      "chunk": false,
      "sendError": false,
      "encoding": "none",
      "allProps": false,
      "x": 210,
      "y": 540,
      "wires": [
          [
              "b4118d3631edf758"
          ]
      ]
  },
  {
      "id": "1daaf49aca04cea1",
      "type": "watch-directory",
      "z": "9a271dd19e90f356",
      "folder": "/Users/martip/Developer/Exentriq/processing",
      "recursive": 0,
      "typeEvent": "create",
      "ignoreInitial": true,
      "ignoredFiles": "",
      "ignoredFilesType": "re",
      "name": "Processing",
      "x": 100,
      "y": 660,
      "wires": [
          [
              "d66b3e0fef44ed0d"
          ]
      ]
  }
]